{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "govuk/components/back-link/macro.njk" import govukBackLink %}
{% extends "base.njk" %}
{% block content %}
  {% if backLink %}
  <div class="app-layout__backlink">
    {{ govukBackLink({
      text: "Back",
      href: backLink
    }) }}
  </div>
  {% endif %}
  <div class="app-layout__content">
    {% if errorList %}
      {{ govukErrorSummary({
        titleText: "There is a problem",
        errorList: errorList
      }) }}
    {% endif %}
    <form method="post" action="{{ submitUrl }}">
      <span class="govuk-caption-l">Submit new component</span>
      <h1>Accessibility findings</h1>
      <p>Sharing accessibility findings helps support the status and usability of the component you're submitting.</p>
      <p>These findings can be the result of a number of sources, including:</p>
      <ul class="govuk-list govuk-list--bullet">
        <li>external or internal accessibility audit</li>
        <li>manual or automated testing</li>
        <li>testing with assistive technologies</li>
        <li>usability testing</li>
      </ul>
      <p>Any accessibility findings you can share will be helpful during the review process.</p>
      {{ govukRadios({
        name: "hasComponentBeenTestedExternalAccessibility",
        hint: {
          text: "This can be an external audit by the Digital Accessibility Centre (DAC) or other organisation."
        },
        fieldset: {
          attributes: {
            id: "has-component-been-tested-for-accessibility"
          },
          legend: {
            text: "Has the component been tested as part of an external accessibility audit?",
            isPageHeading: true,
            classes: "govuk-fieldset__legend--m"
          }
        },
        items: [
          {
            value: "yes",
            text: "Yes"
          },
          {
            value: "no",
            text: "No"
          }
        ],
        errorMessage: formErrors.hasComponentBeenTestedExternalAccessibility,
        value: formData.hasComponentBeenTestedExternalAccessibility
      }) }}

      {{ govukRadios({
        name: "hasComponentBeenTestedInternalAudit",
        hint: {
          text: "This can be an audit by an internal UK Government team."
        },
        fieldset: {
          attributes: {
            id: "has-component-been-tested-for-accessibility"
          },
          legend: {
            text: "Has the component been tested as part of an internal audit?",
            isPageHeading: true,
            classes: "govuk-fieldset__legend--m"
          }
        },
        items: [
          {
            value: "yes",
            text: "Yes"
          },
          {
            value: "no",
            text: "No"
          }
        ],
        errorMessage: formErrors.hasComponentBeenTestedInternalAudit,
        value: formData.hasComponentBeenTestedInternalAudit
      }) }}

      {{ govukRadios({
        name: "hasComponentBeenTestedUsingAssistiveTechnology",
        hint: {
          text: "This can be, but not limited to, assistive technology such as JAWS, TalkBack or Dragon."
        },
        fieldset: {
          attributes: {
            id: "has-component-been-tested-for-accessibility"
          },
          legend: {
            text: "Has the component been tested using assistive technology?",
            isPageHeading: true,
            classes: "govuk-fieldset__legend--m"
          }
        },
        items: [
          {
            value: "yes",
            text: "Yes"
          },
          {
            value: "no",
            text: "No"
          }
        ],
        errorMessage: formErrors.hasComponentBeenTestedUsingAssistiveTechnology,
        value: formData.hasComponentBeenTestedUsingAssistiveTechnology
      }) }}

      <input type="hidden" name="_csrf" value="{{ csrfToken }}" />

      <div class="govuk-button-group moj-button-action">
        {{ govukButton({
          text: 'Continue',
          preventDoubleClick: true
        }) }}
      </div>
    </form>
  </div>

{% endblock %}
